import type { GameSettings, AttributeGroup, InnateTalentRank, PhapBaoRank, StatBonus, GameSpeed, Season, Weather, TimeOfDay, NpcDensity, RealmConfig, SafetyLevel, AIModel, ImageModel, RagEmbeddingModel, LayoutMode, ItemQuality, EquipmentSlot, NarrativeStyle, InnateTalent, Theme, CultivationPath, AlchemyRecipe, FactionReputationStatus, Sect, CaveAbode, CharacterStatus, InventoryItem, DifficultyLevel, SystemShopItem, Element, SpiritualRootQuality } from './types';
import {
  GiCauldron, GiBroadsword,
  GiHealthNormal, GiHourglass, GiMagicSwirl, GiPentacle, GiPerspectiveDiceSixFacesRandom,
  GiRunningShoe, GiScrollQuill, GiSparklingSabre, GiStairsGoal, GiStoneTower, GiYinYang,
  GiSpinalCoil, GiMuscularTorso, GiSoulVessel, GiBoltSpellCast, GiHeartTower, GiScales,
  GiMountainCave, GiDoubleDragon, GiTalk, GiBed, GiSprout, GiStoneBlock, GiHerbsBundle,
  GiGoldBar, GiTreeBranch, GiWaterDrop, GiFire, GiGroundbreaker,
  GiChestArmor, GiLegArmor, GiBoots, GiRing, GiNecklace
} from 'react-icons/gi';
import { FaSun, FaMoon, FaShieldAlt } from 'react-icons/fa';

// Re-export non-world-specific data
export * from './data/sects';
export * from './data/shops';
export * from './data/recipes';
export * from './data/cultivationPaths';
export * from './data/realmSystem';
export * from './data/cave';

// Explicitly import and re-export world-specific data for clarity
import { PT_FACTIONS, PT_FACTION_NAMES, JTTW_FACTIONS, JTTW_FACTION_NAMES } from './data/factions';
import { PT_WORLD_MAP, JTTW_WORLD_MAP } from './data/locations';
import { PT_NPC_LIST, JTTW_NPC_LIST } from './data/npcs';
import { PT_MAJOR_EVENTS, JTTW_MAJOR_EVENTS } from './data/events';

export {
    PT_FACTIONS, PT_FACTION_NAMES, JTTW_FACTIONS, JTTW_FACTION_NAMES,
    PT_WORLD_MAP, JTTW_WORLD_MAP,
    PT_NPC_LIST, JTTW_NPC_LIST,
    PT_MAJOR_EVENTS, JTTW_MAJOR_EVENTS
};


export const DEFAULT_WORLD_ID = "phong_than_dien_nghia";
export const CURRENT_GAME_VERSION = "1.0.8";

export const INVENTORY_ACTION_LOG_PREFIX = "[System Note: Trong l√∫c ki·ªÉm tra t√∫i ƒë·ªì, ng∆∞·ªùi ch∆°i ƒë√£:\n";

export const SPIRITUAL_ROOT_CONFIG: Record<Element, { name: string, icon: React.ElementType, description: string, baseBonuses: StatBonus[] }> = {
    'Kim': { name: 'Kim', icon: GiGoldBar, description: 'Ch·ªß v·ªÅ s√°t‰ºê, c∆∞∆°ng m√£nh v√¥ song. Tu sƒ© Kim Linh CƒÉn c√≥ l·ª±c c√¥ng k√≠ch v√† ph√≤ng ng·ª± v·∫≠t l√Ω v∆∞·ª£t tr·ªôi.', baseBonuses: [{ attribute: 'L·ª±c L∆∞·ª£ng', value: 5 }, { attribute: 'CƒÉn C·ªët', value: 3 }] },
    'M·ªôc': { name: 'M·ªôc', icon: GiTreeBranch, description: 'Ch·ªß v·ªÅ sinh c∆°, ch·ªØa tr·ªã v√† kh·ªëng ch·∫ø. Tu sƒ© M·ªôc Linh CƒÉn c√≥ kh·∫£ nƒÉng h·ªìi ph·ª•c m·∫°nh m·∫Ω v√† am hi·ªÉu th·∫£o d∆∞·ª£c.', baseBonuses: [{ attribute: 'Sinh M·ªánh', value: 20 }, { attribute: 'Ng·ª± Kh√≠ Thu·∫≠t', value: 3 }] },
    'Th·ªßy': { name: 'Th·ªßy', icon: GiWaterDrop, description: 'Ch·ªß v·ªÅ bi·∫øn h√≥a, linh ho·∫°t v√† kh·ªëng ch·∫ø. Tu sƒ© Th·ªßy Linh CƒÉn c√≥ th√¢n ph√°p nhanh nh·∫πn v√† ph√°p thu·∫≠t ƒëa d·∫°ng.', baseBonuses: [{ attribute: 'Th√¢n Ph√°p', value: 5 }, { attribute: 'Linh L·ª±c', value: 15 }] },
    'H·ªèa': { name: 'H·ªèa', icon: GiFire, description: 'Ch·ªß v·ªÅ b√πng n·ªï, h·ªßy di·ªát. Tu sƒ© H·ªèa Linh CƒÉn c√≥ s√°t th∆∞∆°ng ph√°p thu·∫≠t c·ª±c cao, thi√™u ƒë·ªët v·∫°n v·∫≠t.', baseBonuses: [{ attribute: 'Linh L·ª±c S√°t Th∆∞∆°ng', value: 5 }, { attribute: 'Nguy√™n Th·∫ßn', value: 3 }] },
    'Th·ªï': { name: 'Th·ªï', icon: GiGroundbreaker, description: 'Ch·ªß v·ªÅ ph√≤ng ng·ª±, v·ªØng ch·∫Øc v√† b·ªÅn b·ªâ. Tu sƒ© Th·ªï Linh CƒÉn c√≥ s·ª©c ph√≤ng ng·ª± v√† s·ª©c b·ªÅn kh√¥ng g√¨ s√°nh b·∫±ng.', baseBonuses: [{ attribute: 'B·ªÅn B·ªâ', value: 5 }, { attribute: 'Nguy√™n Th·∫ßn Kh√°ng', value: 3 }] },
    'V√¥': { name: 'V√¥', icon: GiYinYang, description: 'Kh√¥ng c√≥ linh cƒÉn.', baseBonuses: [] },
    'D·ªã': { name: 'D·ªã', icon: GiYinYang, description: 'Linh cƒÉn bi·∫øn d·ªã ƒë·∫∑c bi·ªát.', baseBonuses: [] },
    'H·ªón ƒê·ªôn': { name: 'H·ªón ƒê·ªôn', icon: GiYinYang, description: 'Linh cƒÉn trong truy·ªÅn thuy·∫øt.', baseBonuses: [] },
};

export const SPIRITUAL_ROOT_QUALITY_CONFIG: Record<SpiritualRootQuality, { color: string, glow?: string, weight: number, multiplier: number }> = {
    'Ph√†m CƒÉn': { color: 'text-gray-400', weight: 50, multiplier: 0.5 },
    'Linh CƒÉn': { color: 'text-green-400', weight: 30, multiplier: 1.0 },
    'ƒê·ªãa CƒÉn': { color: 'text-blue-400', weight: 15, multiplier: 1.5 },
    'Thi√™n CƒÉn': { color: 'text-purple-400', weight: 4, multiplier: 2.5 },
    'Th√°nh CƒÉn': { color: 'text-amber-400', glow: 'talent-saint-glow', weight: 1, multiplier: 4.0 },
};

export const CURRENCY_ITEMS: Omit<InventoryItem, 'quantity'>[] = [
    { id: 'currency_dong', name: 'ƒê·ªìng', description: 'Ti·ªÅn t·ªá c∆° b·∫£n nh·∫•t c·ªßa ph√†m nh√¢n.', type: 'T·∫°p V·∫≠t', weight: 0.01, quality: 'Ph√†m Ph·∫©m', value: 1, icon: 'ü™ô' },
    { id: 'currency_bac', name: 'B·∫°c', description: 'Ti·ªÅn t·ªá ph·ªï bi·∫øn c·ªßa ph√†m nh√¢n.', type: 'T·∫°p V·∫≠t', weight: 0.01, quality: 'Ph√†m Ph·∫©m', value: 100, icon: '‚ö™' },
    { id: 'currency_vang', name: 'V√†ng', description: 'Ti·ªÅn t·ªá qu√Ω gi√° c·ªßa ph√†m nh√¢n.', type: 'T·∫°p V·∫≠t', weight: 0.01, quality: 'Ph√†m Ph·∫©m', value: 10000, icon: 'üü°' },
    { id: 'currency_lthp', name: 'Linh th·∫°ch h·∫° ph·∫©m', description: 'ƒê√° ch·ª©a linh kh√≠, ti·ªÅn t·ªá c·ªßa tu sƒ©.', type: 'T·∫°p V·∫≠t', weight: 0.1, quality: 'Linh Ph·∫©m', value: 10000, icon: 'üíé' },
];

export const SYSTEM_SHOP_ITEMS: SystemShopItem[] = [
    { id: 'sys_item_stat_boost', name: 'D·ªãch C√¢n T·∫©y T·ªßy D·ªãch', description: 'M·ªôt li·ªÅu thu·ªëc t·ª´ th·∫ø gi·ªõi kh√°c, gi√∫p c·∫£i thi·ªán to√†n b·ªô thu·ªôc t√≠nh c∆° b·∫£n vƒ©nh vi·ªÖn.', cost: 250, effect: { type: 'CHANGE_STAT', details: { attribute: 'all_base', change: 1 } } },
    { id: 'sys_item_qi_boost', name: 'Linh Kh√≠ K·∫øt Tinh', description: 'M·ªôt kh·ªëi tinh th·ªÉ ch·ª©a ƒë·ª±ng linh kh√≠ thu·∫ßn khi·∫øt, gi√∫p tƒÉng m·∫°nh tu vi hi·ªán t·∫°i.', cost: 100, effect: { type: 'CHANGE_STAT', details: { attribute: 'spiritualQi', change: 5000 } } },
    { id: 'sys_item_gacha_ticket', name: 'V√© Gacha V·∫≠n M·ªánh', description: 'M·ªôt chi·∫øc v√© b√≠ ·∫©n, c√≥ th·ªÉ r√∫t ra m·ªôt v·∫≠t ph·∫©m ho·∫∑c k·ª≥ ng·ªô ng·∫´u nhi√™n.', cost: 50, effect: { type: 'START_EVENT', details: { eventId: 'system_gacha' } } },
];

export const CHARACTER_STATUS_CONFIG: Record<CharacterStatus, { label: string; threshold: number; debuffs: StatBonus[]; color: string }> = {
  HEALTHY: { label: 'Kh·ªèe m·∫°nh', threshold: 0.9, debuffs: [], color: 'text-green-400' },
  LIGHTLY_INJURED: { label: 'B·ªã th∆∞∆°ng nh·∫π', threshold: 0.5, debuffs: [{ attribute: 'Th√¢n Ph√°p', value: -2 }, { attribute: 'L·ª±c L∆∞·ª£ng', value: -2 }], color: 'text-yellow-400' },
  HEAVILY_INJURED: { label: 'B·ªã th∆∞∆°ng n·∫∑ng', threshold: 0.1, debuffs: [{ attribute: 'Th√¢n Ph√°p', value: -5 }, { attribute: 'L·ª±c L∆∞·ª£ng', value: -5 }, { attribute: 'Nguy√™n Th·∫ßn', value: -3 }], color: 'text-orange-500' },
  NEAR_DEATH: { label: 'S·∫Øp ch·∫øt', threshold: 0, debuffs: [{ attribute: 'Th√¢n Ph√°p', value: -10 }, { attribute: 'L·ª±c L∆∞·ª£ng', value: -10 }, { attribute: 'Nguy√™n Th·∫ßn', value: -5 }, { attribute: 'Ng·ªô T√≠nh', value: -5 }], color: 'text-red-600' },
};

export const FACTION_REPUTATION_TIERS: { threshold: number; status: FactionReputationStatus }[] = [
    { threshold: -101, status: 'K·∫ª ƒê·ªãch' }, // -100 to -51
    { threshold: -50, status: 'L·∫°nh Nh·∫°t' }, // -50 to -1
    { threshold: 0, status: 'Trung L·∫≠p' }, // 0 to 49
    { threshold: 50, status: 'Th√¢n Thi·ªán' }, // 50 to 99
    { threshold: 100, status: 'ƒê·ªìng Minh' }, // 100
];

export const COMMUNITY_MODS_URL = 'https://gist.githubusercontent.com/world-class-dev/893c597818788478f7e2c60e34c565c6/raw/phongthan-community-mods.json';

export const NARRATIVE_STYLES: { value: NarrativeStyle; label: string }[] = [
    { value: 'classic_wuxia', label: 'C·ªï ƒëi·ªÉn Ti√™n hi·ªáp' },
    { value: 'dark_fantasy', label: 'Huy·ªÅn huy·ªÖn H·∫Øc √°m' },
    { value: 'poetic', label: 'VƒÉn phong Thi v·ªã' },
    { value: 'concise', label: 'S√∫c t√≠ch, ng·∫Øn g·ªçn' },
];

export const FONT_OPTIONS: { value: string; label: string }[] = [
    { value: "'Noto Serif', serif", label: 'Noto Serif (M·∫∑c ƒë·ªãnh)' },
    { value: "'Cormorant Garamond', serif", label: 'Cormorant Garamond' },
    { value: "'ZCOOL XiaoWei', serif", label: 'ZCOOL XiaoWei' },
    { value: "'Ma Shan Zheng', cursive", label: 'Ma Shan Zheng' },
];

export const THEME_OPTIONS: { value: Theme; label: string }[] = [
    { value: 'theme-bamboo-forest', label: 'Tr√∫c L√¢m U T·ªãch' },
];

export const DEFAULT_SETTINGS: GameSettings = {
    layoutMode: 'auto',
    gameSpeed: 'normal',
    narrativeStyle: 'classic_wuxia',
    fontFamily: "'Noto Serif', serif",
    theme: 'theme-bamboo-forest',
    backgroundImage: '',
    zoomLevel: 50,
    textColor: '#d1d5db',
    mainTaskModel: 'gemini-2.5-flash',
    quickSupportModel: 'gemini-2.5-flash',
    itemAnalysisModel: 'gemini-2.5-flash',
    itemCraftingModel: 'gemini-2.5-flash',
    soundSystemModel: 'gemini-2.5-flash',
    actionAnalysisModel: 'gemini-2.5-flash',
    gameMasterModel: 'gemini-2.5-flash',
    npcSimulationModel: 'gemini-2.5-flash',
    dataParsingModel: 'gemini-2.5-flash',
    imageGenerationModel: 'imagen-4.0-generate-001',
    ragSummaryModel: 'gemini-2.5-flash',
    ragSourceIdModel: 'gemini-2.5-flash',
    ragEmbeddingModel: 'text-embedding-004',
    autoSummaryFrequency: 5,
    ragTopK: 5,
    historyTokenLimit: 8192,
    summarizeBeforePruning: true,
    itemsPerPage: 10,
    aiResponseWordCount: 2000,
    enableAiSoundSystem: false,
    masterSafetySwitch: true,
    enableNsfwMode: false,
    safetyLevels: {
        harassment: 'BLOCK_MEDIUM_AND_ABOVE',
        hateSpeech: 'BLOCK_MEDIUM_AND_ABOVE',
        sexuallyExplicit: 'BLOCK_MEDIUM_AND_ABOVE',
        dangerousContent: 'BLOCK_MEDIUM_AND_ABOVE',
    },
    enablePerformanceMode: false,
    temperature: 1,
    topK: 64,
    topP: 0.95,
    enableThinking: true,
    thinkingBudget: 250,
    apiKeys: [],
    modelApiKeyAssignments: {},
    enableDeveloperConsole: false,
    backgroundMusicUrl: '',
    backgroundMusicName: '',
    backgroundMusicVolume: 0.5,
    enableTTS: false,
    ttsVoiceURI: '',
    ttsRate: 1,
    ttsPitch: 1,
    ttsVolume: 1,
};

export const AI_MODELS: { value: AIModel; label: string }[] = [
    { value: 'gemini-2.5-flash', label: 'Gemini 2.5 Flash' },
];
export const IMAGE_AI_MODELS: { value: ImageModel; label: string }[] = [
    { value: 'imagen-4.0-generate-001', label: 'Imagen 4.0 Generate' },
];
export const RAG_EMBEDDING_MODELS: { value: RagEmbeddingModel; label: string }[] = [
    { value: 'text-embedding-004', label: 'text-embedding-004' },
];
export const SAFETY_LEVELS: { value: SafetyLevel; label: string }[] = [
    { value: 'HARM_BLOCK_THRESHOLD_UNSPECIFIED', label: 'Kh√¥ng x√°c ƒë·ªãnh' },
    { value: 'BLOCK_LOW_AND_ABOVE', label: 'Ch·∫∑n Th·∫•p v√† Cao h∆°n' },
    { value: 'BLOCK_MEDIUM_AND_ABOVE', label: 'Ch·∫∑n Trung b√¨nh v√† Cao h∆°n' },
    { value: 'BLOCK_ONLY_HIGH', label: 'Ch·ªâ ch·∫∑n M·ª©c cao' },
    { value: 'BLOCK_NONE', label: 'Kh√¥ng ch·∫∑n' },
];

export const LAYOUT_MODES: { value: LayoutMode; label: string }[] = [
    { value: 'auto', label: 'T·ª± ƒë·ªông' },
    { value: 'desktop', label: 'M√°y t√≠nh' },
    { value: 'mobile', label: 'Di ƒë·ªông' },
];

export const GAME_SPEEDS: { value: GameSpeed; label: string }[] = [
    { value: 'very_slow', label: 'R·∫•t ch·∫≠m' },
    { value: 'slow', label: 'Ch·∫≠m' },
    { value: 'normal', label: 'B√¨nh th∆∞·ªùng' },
    { value: 'fast', label: 'Nhanh' },
    { value: 'very_fast', label: 'R·∫•t nhanh' },
];

export const DIFFICULTY_LEVELS: { id: DifficultyLevel; name: string; description: string; baseStatValue: number; color: string }[] = [
    { id: 'rookie', name: 'T√¢n Th·ªß', description: 'Tr·∫£i nghi·ªám th∆∞ gi√£n, ph√π h·ª£p cho ng∆∞·ªùi m·ªõi l√†m quen.', baseStatValue: 15, color: 'border-green-500' },
    { id: 'easy', name: 'D·ªÖ', description: 'Thu·ªôc t√≠nh kh·ªüi ƒë·∫ßu cao h∆°n m·ªôt ch√∫t. Ph√π h·ª£p cho ng∆∞·ªùi m·ªõi.', baseStatValue: 12, color: 'border-sky-500' },
    { id: 'medium', name: 'Trung B√¨nh', description: 'Tr·∫£i nghi·ªám c√¢n b·∫±ng, ƒë√∫ng v·ªõi √Ω ƒë·ªì c·ªßa tr√≤ ch∆°i.', baseStatValue: 10, color: 'border-gray-500' },
    { id: 'hard', name: 'Kh√≥', description: 'Th·ª≠ th√°ch cao h∆°n, thu·ªôc t√≠nh kh·ªüi ƒë·∫ßu b·ªã gi·∫£m.', baseStatValue: 8, color: 'border-orange-500' },
    { id: 'hell', name: 'G√† ƒê·∫•t Ch√≥ S√†nh', description: 'Th·ª≠ th√°ch c·ª±c ƒë·∫°i, kh·ªüi ƒë·∫ßu nh∆∞ m·ªôt k·∫ª tay m∆° gi·ªØa th·∫ø gi·ªõi tu ch√¢n t√†n kh·ªëc.', baseStatValue: 5, color: 'border-red-600' },
];

export const SAFETY_CATEGORIES = [
    { id: 'harassment', name: 'Qu·∫•y r·ªëi' },
    { id: 'hateSpeech', name: 'Ng√¥n t·ª´ k√≠ch ƒë·ªông th√π ƒë·ªãch' },
    { id: 'sexuallyExplicit', name: 'N·ªôi dung khi√™u d√¢m' },
    { id: 'dangerousContent', name: 'N·ªôi dung nguy hi·ªÉm' },
];

export const PERSONALITY_TRAITS = [
  { name: 'Trung L·∫≠p', description: 'H√†nh ƒë·ªông theo l√Ω tr√≠, kh√¥ng thi√™n v·ªã phe ph√°i n√†o.' },
  { name: 'Ch√≠nh Tr·ª±c', description: 'Lu√¥n ƒë·ª©ng v·ªÅ ph√≠a l·∫Ω ph·∫£i, b·∫£o v·ªá k·∫ª y·∫øu, tu√¢n theo ƒë·∫°o nghƒ©a.' },
  { name: 'H·ªón Lo·∫°n', description: 'H√†nh ƒë·ªông kh√≥ l∆∞·ªùng, t√πy theo c·∫£m x√∫c v√† l·ª£i √≠ch nh·∫•t th·ªùi.' },
  { name: 'T√† √Åc', description: 'Kh√¥ng t·ª´ th·ªß ƒëo·∫°n ƒë·ªÉ ƒë·∫°t ƒë∆∞·ª£c m·ª•c ƒë√≠ch, coi th∆∞·ªùng sinh m·∫°ng.' },
];

export const ATTRIBUTES_CONFIG: AttributeGroup[] = [
  {
    title: 'Tinh (Á≤æ - Nh·ª•c Th√¢n)',
    attributes: [
      { name: 'CƒÉn C·ªët', description: 'N·ªÅn t·∫£ng c∆° th·ªÉ, ·∫£nh h∆∞·ªüng ƒë·∫øn gi·ªõi h·∫°n Sinh M·ªánh, ph√≤ng ng·ª± v·∫≠t l√Ω v√† ti·ªÅm nƒÉng th·ªÉ tu.', value: 10, icon: GiSpinalCoil },
      { name: 'L·ª±c L∆∞·ª£ng', description: 'S·ª©c m·∫°nh v·∫≠t l√Ω, ·∫£nh h∆∞·ªüng ƒë·∫øn s√°t th∆∞∆°ng c·∫≠n chi·∫øn v√† kh·∫£ nƒÉng mang v√°c.', value: 10, icon: GiMuscularTorso },
      { name: 'Th√¢n Ph√°p', description: 'S·ª± nhanh nh·∫πn, t·ªëc ƒë·ªô di chuy·ªÉn, n√© tr√°nh v√† t·ªëc ƒë·ªô ra ƒë√≤n.', value: 10, icon: GiRunningShoe },
      { name: 'B·ªÅn B·ªâ', description: 'Kh·∫£ nƒÉng kh√°ng c√°c hi·ªáu ·ª©ng b·∫•t l·ª£i v·∫≠t l√Ω (tr√∫ng ƒë·ªôc, cho√°ng,...).', value: 10, icon: GiHeartTower },
    ],
  },
  {
    title: 'Kh√≠ (Ê∞î - Ch√¢n Nguy√™n)',
    attributes: [
      { name: 'Linh CƒÉn', description: 'T∆∞ ch·∫•t tu luy·ªán, quy·∫øt ƒë·ªãnh t·ªëc ƒë·ªô h·∫•p th·ª• linh kh√≠ v√† s·ª± t∆∞∆°ng th√≠ch v·ªõi c√¥ng ph√°p.', value: 'Ch∆∞a x√°c ƒë·ªãnh', icon: GiPentacle },
      { name: 'Linh L·ª±c S√°t Th∆∞∆°ng', description: 'S√°t th∆∞∆°ng g√¢y ra b·ªüi ph√°p thu·∫≠t v√† ph√°p b·∫£o.', value: 10, icon: GiBoltSpellCast },
      { name: 'Ch√¢n Nguy√™n Tinh Thu·∫ßn', description: 'ƒê·ªô tinh khi·∫øt c·ªßa linh l·ª±c, ·∫£nh h∆∞·ªüng ƒë·∫øn uy l·ª±c k·ªπ nƒÉng.', value: 10, icon: GiMagicSwirl },
      { name: 'Ng·ª± Kh√≠ Thu·∫≠t', description: 'ƒê·ªô kh√©o l√©o ƒëi·ªÅu khi·ªÉn linh kh√≠ (luy·ªán ƒëan, luy·ªán kh√≠, b·ªë tr·∫≠n).', value: 10, icon: GiCauldron },
    ],
  },
  {
    title: 'Th·∫ßn (Á•û - Linh H·ªìn)',
    attributes: [
      { name: 'Ng·ªô T√≠nh', description: 'Kh·∫£ nƒÉng lƒ©nh h·ªôi ƒë·∫°i ƒë·∫°o, ·∫£nh h∆∞·ªüng t·ªëc ƒë·ªô h·ªçc c√¥ng ph√°p v√† ƒë·ªôt ph√°.', value: 10, icon: GiScrollQuill },
      { name: 'Nguy√™n Th·∫ßn', description: 'S·ª©c m·∫°nh linh h·ªìn, ·∫£nh h∆∞·ªüng ƒë·∫øn uy l·ª±c th·∫ßn h·ªìn k·ªπ v√† kh√°ng hi·ªáu ·ª©ng tinh th·∫ßn.', value: 10, icon: GiSoulVessel },
      { name: 'Nguy√™n Th·∫ßn Kh√°ng', description: 'Kh·∫£ nƒÉng ph√≤ng ng·ª± tr∆∞·ªõc c√°c ƒë√≤n t·∫•n c√¥ng linh h·ªìn v√† ph√°p thu·∫≠t.', value: 10, icon: FaShieldAlt },
      { name: 'Th·∫ßn Th·ª©c', description: 'Ph·∫°m vi v√† ƒë·ªô r√µ n√©t c·ªßa gi√°c quan t√¢m linh, d√πng ƒë·ªÉ d√≤ x√©t, ƒëi·ªÅu khi·ªÉn ph√°p b·∫£o.', value: 10, icon: GiSparklingSabre },
      { name: 'ƒê·∫°o T√¢m', description: 'S·ª± ki√™n ƒë·ªãnh tr√™n con ƒë∆∞·ªùng tu luy·ªán, ·∫£nh h∆∞·ªüng kh·∫£ nƒÉng ch·ªëng l·∫°i t√¢m ma.', value: 10, icon: GiStoneTower },
    ],
  },
  {
    title: 'Ngo·∫°i Duy√™n (Â§ñÁºò - Y·∫øu T·ªë B√™n Ngo√†i)',
    attributes: [
      { name: 'C∆° Duy√™n', description: 'V·∫≠n may, kh·∫£ nƒÉng g·∫∑p ƒë∆∞·ª£c k·ª≥ ng·ªô v√† t√¨m th·∫•y b·∫£o v·∫≠t.', value: 10, icon: GiPerspectiveDiceSixFacesRandom },
      { name: 'M·ªã L·ª±c', description: 'S·ª©c h·∫•p d·∫´n c√° nh√¢n, ·∫£nh h∆∞·ªüng ƒë·∫øn th√°i ƒë·ªô c·ªßa NPC v√† gi√° c·∫£ mua b√°n.', value: 10, icon: GiTalk },
      { name: 'Nh√¢n Qu·∫£', description: 'Nghi·ªáp b√°o t·ª´ nh·ªØng h√†nh ƒë·ªông ƒë√£ l√†m, c√≥ th·ªÉ d·∫´n ƒë·∫øn ph√∫c ho·∫∑c h·ªça.', value: 0, icon: GiScales },
    ],
  },
   {
    title: 'Ch·ªâ s·ªë Sinh T·ªìn',
    attributes: [
      { name: 'Sinh M·ªánh', description: 'Th·ªÉ l·ª±c c·ªßa nh√¢n v·∫≠t. V·ªÅ 0 s·∫Ω t·ª≠ vong.', value: 100, icon: GiHealthNormal },
      { name: 'Linh L·ª±c', description: 'NƒÉng l∆∞·ª£ng ƒë·ªÉ thi tri·ªÉn ph√°p thu·∫≠t v√† k·ªπ nƒÉng.', value: 50, icon: GiMagicSwirl },
    ],
  },
  {
    title: 'Th√¥ng Tin Tu Luy·ªán',
    attributes: [
      { name: 'C·∫£nh Gi·ªõi', description: 'C·∫•p ƒë·ªô tu vi hi·ªán t·∫°i.', value: 'Ph√†m Nh√¢n', icon: GiStairsGoal },
      { name: 'Tu·ªïi Th·ªç', description: 'Th·ªùi gian s·ªëng c√≤n l·∫°i.', value: 80, icon: GiHourglass },
    ],
  },
  {
    title: 'Thi√™n H∆∞·ªõng',
    attributes: [
      { name: 'Ch√≠nh ƒê·∫°o', description: 'Danh ti·∫øng trong ch√≠nh ƒë·∫°o. C√†ng cao c√†ng ƒë∆∞·ª£c phe ch√≠nh ph√°i y√™u m·∫øn, nh∆∞ng b·ªã ma ƒë·∫°o cƒÉm gh√©t.', value: 0, icon: FaSun },
      { name: 'Ma ƒê·∫°o', description: 'Uy danh trong ma ƒë·∫°o. C√†ng cao c√†ng ƒë∆∞·ª£c ma tu k√≠nh s·ª£, nh∆∞ng b·ªã ch√≠nh ƒë·∫°o truy l√πng.', value: 0, icon: FaMoon },
    ],
  },
];
export const ALL_ATTRIBUTES = ATTRIBUTES_CONFIG.flatMap(g => g.attributes.map(a => a.name));

export const ALL_PARSABLE_STATS = [...ALL_ATTRIBUTES, 'spiritualQi', 'hunger', 'thirst', 'temperature'];


export const INNATE_TALENT_PROBABILITY: { rank: InnateTalentRank, weight: number }[] = [
    { rank: 'Ph√†m Giai', weight: 90 },
    { rank: 'Si√™u Ph√†m Giai', weight: 50 },
    { rank: 'S∆° Ti√™n Giai', weight: 30 },
    { rank: 'Trung Ti√™n Giai', weight: 16 },
    { rank: 'H·∫≠u Ti√™n Giai', weight: 8 },
    { rank: 'ƒê·∫°i Ti√™n Giai', weight: 5 },
    { rank: 'Th√°nh Giai', weight: 1 },
];

export const TALENT_RANK_NAMES: InnateTalentRank[] = INNATE_TALENT_PROBABILITY.map(p => p.rank);

export const INNATE_TALENT_RANKS: Record<InnateTalentRank, { color: string; glow?: string }> = {
    'Ph√†m Giai': { color: 'text-gray-400' },
    'Si√™u Ph√†m Giai': { color: 'text-green-400' },
    'S∆° Ti√™n Giai': { color: 'text-blue-400' },
    'Trung Ti√™n Giai': { color: 'text-purple-400' },
    'H·∫≠u Ti√™n Giai': { color: 'text-cyan-400' },
    'ƒê·∫°i Ti√™n Giai': { color: 'text-amber-400' },
    'Th√°nh Giai': { color: 'text-red-400', glow: 'talent-saint-glow' },
};

export const PHAP_BAO_RANKS: Record<PhapBaoRank, { color: string }> = {
    'Ph√†m Giai': { color: 'text-gray-400' },
    'Ti·ªÉu Giai': { color: 'text-green-400' },
    'Trung Giai': { color: 'text-blue-400' },
    'Cao Giai': { color: 'text-purple-400' },
    'Si√™u Giai': { color: 'text-cyan-400' },
    'ƒê·ªãa Giai': { color: 'text-amber-400' },
    'Thi√™n Giai': { color: 'text-red-400' },
    'Th√°nh Giai': { color: 'text-yellow-300' },
};

export const ITEM_QUALITY_STYLES: Record<ItemQuality, { color: string }> = {
    'Ph√†m Ph·∫©m': { color: 'text-gray-300' },
    'Linh Ph·∫©m': { color: 'text-green-400' },
    'Ph√°p Ph·∫©m': { color: 'text-blue-400' },
    'B·∫£o Ph·∫©m': { color: 'text-purple-400' },
    'Ti√™n Ph·∫©m': { color: 'text-amber-400' },
    'Tuy·ªát Ph·∫©m': { color: 'text-red-400' },
};

export const EQUIPMENT_SLOTS: Record<EquipmentSlot, { label: string }> = {
    'V≈© Kh√≠': { label: 'V≈© Kh√≠' },
    'Th∆∞·ª£ng Y': { label: 'Th∆∞·ª£ng Y' },
    'H·∫° Y': { label: 'H·∫° Y' },
    'Gi√†y': { label: 'Gi√†y' },
    'Ph·ª• Ki·ªán 1': { label: 'Ph·ª• Ki·ªán 1' },
    'Ph·ª• Ki·ªán 2': { label: 'Ph·ª• Ki·ªán 2' },
};

export const EQUIPMENT_SLOT_ICONS: Record<EquipmentSlot, React.ElementType> = {
    'V≈© Kh√≠': GiBroadsword,
    'Th∆∞·ª£ng Y': GiChestArmor,
    'H·∫° Y': GiLegArmor,
    'Gi√†y': GiBoots,
    'Ph·ª• Ki·ªán 1': GiRing,
    'Ph·ª• Ki·ªán 2': GiNecklace,
};

export const SHICHEN_LIST: { name: string; icon: string }[] = [
    { name: 'T√Ω', icon: 'üê≠' }, { name: 'S·ª≠u', icon: 'üêÆ' }, { name: 'D·∫ßn', icon: 'üêØ' }, { name: 'M√£o', icon: 'üê∞' },
    { name: 'Th√¨n', icon: 'üê≤' }, { name: 'T·ªµ', icon: 'üêç' }, { name: 'Ng·ªç', icon: 'üê¥' }, { name: 'M√πi', icon: 'üêë' },
    { name: 'Th√¢n', icon: 'üêµ' }, { name: 'D·∫≠u', icon: 'üêî' }, { name: 'Tu·∫•t', icon: 'üê∂' }, { name: 'H·ª£i', icon: 'üê∑' },
];

export const TIMEOFDAY_DETAILS: Record<string, { name: TimeOfDay, icon: string }> = {
    'T√Ω': { name: 'N·ª≠a ƒê√™m', icon: 'üåô' }, 'S·ª≠u': { name: 'N·ª≠a ƒê√™m', icon: 'üåô' },
    'D·∫ßn': { name: 'S√°ng S·ªõm', icon: 'üåÖ' }, 'M√£o': { name: 'S√°ng S·ªõm', icon: 'üåÖ' },
    'Th√¨n': { name: 'Bu·ªïi S√°ng', icon: 'üèôÔ∏è' }, 'T·ªµ': { name: 'Bu·ªïi S√°ng', icon: 'üèôÔ∏è' },
    'Ng·ªç': { name: 'Bu·ªïi Tr∆∞a', icon: '‚òÄÔ∏è' }, 'M√πi': { name: 'Bu·ªïi Tr∆∞a', icon: '‚òÄÔ∏è' },
    'Th√¢n': { name: 'Bu·ªïi Chi·ªÅu', icon: 'üå§Ô∏è' }, 'D·∫≠u': { name: 'Ho√†ng H√¥n', icon: 'üåá' },
    'Tu·∫•t': { name: 'Bu·ªïi T·ªëi', icon: 'üåÉ' }, 'H·ª£i': { name: 'Bu·ªïi T·ªëi', icon: 'üåÉ' },
};

export const WEATHER_INFO: Record<Weather, { name: string; icon: string }> = {
    'SUNNY': { name: 'Tr·ªùi Quang', icon: '‚òÄÔ∏è' },
    'CLOUDY': { name: 'Nhi·ªÅu M√¢y', icon: '‚òÅÔ∏è' },
    'RAIN': { name: 'M∆∞a', icon: 'üåßÔ∏è' },
    'STORM': { name: 'B√£o T·ªë', icon: '‚õàÔ∏è' },
    'SNOW': { name: 'Tuy·∫øt R∆°i', icon: '‚ùÑÔ∏è' },
};

export const SEASON_ICONS: Record<Season, string> = { 'Xu√¢n': 'üå∏', 'H·∫°': '‚òÄÔ∏è', 'Thu': 'üçÇ', 'ƒê√¥ng': '‚ùÑÔ∏è' };

export const NPC_DENSITY_LEVELS: { id: NpcDensity; name: string; description: string; count: number }[] = [
    { id: 'low', name: 'Th∆∞a Th·ªõt', description: '√çt NPC, th·∫ø gi·ªõi y√™n tƒ©nh.', count: 10 },
    { id: 'medium', name: 'V·ª´a Ph·∫£i', description: 'C√¢n b·∫±ng, th·∫ø gi·ªõi s·ªëng ƒë·ªông.', count: 20 },
    { id: 'high', name: 'ƒê√¥ng ƒê√∫c', description: 'Nhi·ªÅu NPC, th·∫ø gi·ªõi h·ªón lo·∫°n.', count: 200 },
];

export const DEFAULT_WORLDS_INFO = {
    phong_than_dien_nghia: {
        id: 'phong_than_dien_nghia',
        name: 'Phong Th·∫ßn Di·ªÖn Nghƒ©a',
        description: 'Th·∫ø gi·ªõi nguy√™n b·∫£n c·ªßa Tam Thi√™n Th·∫ø Gi·ªõi, d·ª±a tr√™n b·ªëi c·∫£nh Phong Th·∫ßn Di·ªÖn Nghƒ©a v·ªõi c√°c s·ª± ki·ªán v√† nh√¢n v·∫≠t quen thu·ªôc.',
        author: 'Nh√† ph√°t tri·ªÉn',
        majorEvents: PT_MAJOR_EVENTS,
        source: 'default' as const,
    },
    tay_du_ky: {
        id: 'tay_du_ky',
        name: 'T√¢y Du K√Ω',
        description: 'H√†nh tr√¨nh ƒë·∫øn T√¢y Thi√™n th·ªânh kinh c·ªßa b·ªën th·∫ßy tr√≤ ƒê∆∞·ªùng TƒÉng, v∆∞·ª£t qua 81 ki·∫øp n·∫°n, ƒë·ªëi ƒë·∫ßu v·ªõi v√¥ s·ªë y√™u ma qu·ª∑ qu√°i.',
        author: 'Nh√† ph√°t tri·ªÉn',
        majorEvents: JTTW_MAJOR_EVENTS,
        source: 'default' as const,
    }
};